#include "../../libPCM.h"
#include "../../../../Dependencies/FoundationIO/libFoundationIO/include/GUUID.h"

#pragma once

#ifndef LIBPCM_W64Common_H
#define LIBPCM_W64Common_H

#ifdef __cplusplus
extern "C" {
#endif
    
    static const uint8_t W64_RIFF_GUIDString[GUUIDStringSize] = {
        0x72,0x69,0x66,0x66,0x2D,0x2E,0x91,0x2D,0xCF,0x11,0x2D,0xA5,0xD6,0x2D,0x28,0xDB,0x04,0xC1,0x00,0x00,0x00
    };
    
    static const uint8_t W64_WAVE_GUIDString[GUUIDStringSize] = {
        0x77,0x61,0x76,0x65,0x2D,0xF3,0xAC,0x2D,0xD3,0x11,0x2D,0x8C,0xD1,0x2D,0x00,0xC0,0x4F,0x8E,0xDB,0x8A,0x00
    };
    
    static const uint8_t W64_FMT_GUIDString[GUUIDStringSize] = {
        0x66,0x6D,0x74,0x20,0x2D,0xF3,0xAC,0x2D,0xD3,0x11,0x2D,0x8C,0xD1,0x2D,0x00,0xC0,0x4F,0x8E,0xDB,0x8A,0x00
    };
    
    static const uint8_t W64_DATA_GUIDString[GUUIDStringSize] = {
        0x64,0x61,0x74,0x61,0x2D,0xF3,0xAC,0x2D,0xD3,0x11,0x2D,0x8C,0xD1,0x2D,0x00,0xC0,0x4F,0x8E,0xDB,0x8A,0x00
    };
    
    static const uint8_t W64_LEVL_GUIDString[GUUIDStringSize] = { // aka Peak Envelope Chunk
        0x6A,0x75,0x6E,0x6B,0x2D,0xF3,0xAC,0x2D,0xD3,0x11,0x2D,0x8C,0xD1,0x2D,0x00,0xC0,0x4F,0x8E,0xDB,0x8A,0x00
    };
    
    static const uint8_t W64_BEXT_GUIDString[GUUIDStringSize] = {
        0x62,0x65,0x78,0x74,0x2D,0xf3,0xAC,0x2D,0xD3,0xAA,0x2D,0xD1,0x8C,0x2D,0x00,0xC0,0x4F,0x8E,0xDB,0x8A,0x00
    };
    
    static const uint8_t W64_FACT_GUIDString[GUUIDStringSize] = {
        0x66,0x61,0x63,0x74,0x2D,0xF3,0xAC,0x2D,0xD3,0x11,0x2D,0x8C,0xD1,0x2D,0x00,0xC0,0x4F,0x8E,0xDB,0x8A,0x00
    };
    
    static const uint8_t W64_JUNK_GUIDString[GUUIDStringSize] = {
        0x6B,0x6E,0x75,0x6A,0x2D,0xAC,0xF3,0x2D,0x11,0xD3,0x2D,0x8C,0xD1,0x2D,0x00,0xC0,0x4F,0x8E,0xDB,0x8A,0x00
    };
    
    static const uint8_t W64_MRKR_GUIDString[GUUIDStringSize] = { // MARKER
        0xAB,0xF7,0x62,0x56,0x2D,0x39,0x45,0x2D,0x11,0xD2,0x2D,0x86,0xC7,0x2D,0x00,0xC0,0x4F,0x8E,0xDB,0x8A,0x00
    };
    
    static const uint8_t W64_SUMM_GUIDString[GUUIDStringSize] = { // SUMMARY LIST
        0x92,0x5F,0x94,0xBC,0x2D,0x52,0x5A,0x2D,0x11,0xD2,0x2D,0x86,0xDC,0x2D,0x00,0xC0,0x4F,0x8E,0xDB,0x8A,0x00
    };
    
    static const uint8_t W64_LIST_GUIDString[GUUIDStringSize] = {
        0x74,0x73,0x69,0x6C,0x2D,0x91,0x2F,0x2D,0x11,0xCF,0x2D,0xA5,0xD6,0x2D,0x28,0xDB,0x04,0xC1,0x00,0x00,0x00
    };
    
    void W64ParseMetadata(PCMFile *PCM, BitBuffer *BitB);
    
    void W64ExtractSamples(PCMFile *PCM, BitBuffer *BitB, uint64_t NumSamples2Extract, uint32_t **ExtractedSamples);
    
    void W64InsertSamples(PCMFile *PCM, BitBuffer *OutputSamples, uint32_t NumSamples2Write, uint32_t **Samples2Write);
    
    void W64WriteHeader(PCMFile *PCM, BitBuffer *BitB);
    
#ifdef __cplusplus
}
#endif

#endif /* LIBPCM_W64Common_H */
